{"name":"DC Addons","tagline":"dc.js chart addons","body":"# dc-addons\r\n\r\nThese [dc.js](http://dc-js.github.io/dc.js/) addons provide new charts for the dc namespace.\r\n\r\n## Addons\r\n  * [Leaflet.js](#leafletjs)\r\n  * [Google Maps](#google-maps)\r\n  * [Tooltip Mixin](#tooltip-mixin)\r\n  * [Pagination Mixin](#pagination-mixin)\r\n  * [Bubble Cloud](#bubble-cloud)\r\n  * [Paired Row](#paired-row)\r\n  * [Server](#server)\r\n  * [AngularJS Directives](#angularjs-directives)\r\n  * [Crossfilter Server](#crossfilter-server)\r\n  * [Crossfilter Server With Elastic Search](#crossfilter-server-with-elastic-search)\r\n\r\n## Installation\r\n```js\r\nbower install dc-addons --save\r\nnpm install dc-addons --save\r\n```\r\n\r\nYou can either include all addons or each on individually as you need them.  To see examples of individual addons see each addon below. The following example will include all addons.\r\n```html\r\n<!-- dc-addons requirements -->\r\n<link rel=\"stylesheet\" href=\"bower_components/leaflet/dist/leaflet.css\" />\r\n<script src=\"bower_components/leaflet/dist/leaflet.js\"></script>\r\n<link rel=\"stylesheet\" href=\"bower_components/leaflet.markercluster/dist/MarkerCluster.css\" />\r\n<link rel=\"stylesheet\" href=\"bower_components/leaflet.markercluster/dist/MarkerCluster.Default.css\" />\r\n<script src=\"bower_components/leaflet.markercluster/dist/leaflet.markercluster.js\"></script>\r\n<script src=\"https://maps.googleapis.com/maps/api/js?key=API_KEY\"></script>\r\n<script src=\"http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/src/markerclusterer.js\"></script>script>\r\n<script src=\"bower_components/d3-tip/index.js\"></script>\r\n\r\n<!-- dc-addons -->\r\n<link rel=\"stylesheet\" href=\"bower_components/dc-addons/dist/dc-addons.min.css\" />\r\n<script src=\"bower_components/dc-addons/dist/dc-addons.min.js\"></script>\r\n```\r\n\r\n## Leaflet.js\r\n\r\nThis extension provides support for dc.js charts in a [leaflet.js](http://leafletjs.com/) map. This is an extension of https://github.com/yurukov/dc.leaflet.js updated to work with dc.js version 2.\r\n\r\n#### Usage\r\nThere are two charts currently implemented - markers and choropleth. They extend the base abstract leaflet chart. Both support selection of datapoints and update in real time. Styling and map options can be set directly to the map object and though functions in the chart. Check the [Leaflet reference](http://leafletjs.com/reference.html#map-options) for more information on the specific map, marker and geojson options.\r\nLocation can be set as either 'lat,lng' string or as an array [lat,lng].\r\n\r\n###### Marker Chart\r\nEach group is presented as one marker on the map.\r\n```\r\ndc.leafletMarkerChart(parent,chartGroup)\r\n  .mapOptions({..})       - set leaflet specific options to the map object; Default: Leaflet default options\r\n  .center([1.1,1.1])      - initial location\r\n  .zoom(7)                - initial zoom level\r\n  .map()                  - get map object\r\n  .locationAccessor()     - function (d) to access the property indicating the latlng (string or array); Default: keyAccessor\r\n  .marker()               - set function (d,map) to build the marker object. Default: standard Leaflet marker is built\r\n  .icon()                 - function (d,map) to build an icon object. Default: L.Icon.Default\r\n  .popup()                - function (d,marker) to return the string or DOM content of a popup\r\n  .renderPopup(true)      - set if popups should be shown; Default: true\r\n  .cluster(false)         - set if markers should be clustered. Requires leaflet.markercluster.js; Default: false\r\n  .clusterObject({..})    - options for the markerCluster object\r\n  .rebuildMarkers(false)  - set if all markers should be rebuild each time the map is redrawn. Degrades performance; Default: false\r\n  .brushOn(true)          - if the map would select datapoints; Default: true\r\n  .filterByArea(false)    - if the map should filter data based on the markers inside the zoomed in area instead of the user clicking on individual markers; Default: false\r\n  .markerGroup()          - get the Leaflet group object containing all shown markers (regular group or cluster)\r\n```\r\n\r\n###### Choropleth Chart\r\nEach group is mapped to an feature on the map\r\n```\r\ndc.leafletChoroplethChart(parent,chartGroup)\r\n  .mapOptions({..})       - set leaflet specific options to the map object; Default: Leaflet default options\r\n  .center([1.1,1.1])      - get or set initial location\r\n  .zoom(7)                - get or set initial zoom level\r\n  .map()                  - get map object\r\n  .geojson()              - geojson object describing the features\r\n  .featureOptions()       - object or a function (feature) to set the options for each feature\r\n  .featureKeyAccessor()   - function (feature) to return a feature property that would be compared to the group key; Defauft: feature.properties.key\r\n  .popup()                - function (d,feature) to return the string or DOM content of a popup\r\n  .renderPopup(true)      - set if popups should be shown; Default: true\r\n  .brushOn(true)          - if the map would select datapoints; Default: true\r\n  .legend(dc.leafletLegend().position('bottomright'))\r\n```\r\n\r\n###### Custom Chart\r\nGives you full control over what is displayed on the map\r\n```\r\ndc.leafletCustomChart(parent,chartGroup)\r\n  .mapOptions({..})       - set leaflet specific options to the map object; Default: Leaflet default options\r\n  .center([1.1,1.1])      - initial location\r\n  .zoom(7)                - initial zoom level\r\n  .map()                  - get map object\r\n  .locationAccessor()     - function (d) to access the property indicating the latlng (string or array); Default: keyAccessor\r\n  .renderItem()           - function (chart, map, d, i) the initial rendering of the map\r\n  .redrawItem()           - function (chart, map, d, i) run on every crossfilter. The d object will have a filtered value added to it.\r\n```\r\n\r\n\r\n#### Examples\r\n  * [Leaflet Marker](http://intellipharm.github.io/dc-addons/examples/leaflet-marker.html)\r\n  * [Leaflet Choropleth](http://intellipharm.github.io/dc-addons/examples/leaflet-choropleth.html)\r\n  * [Leaflet Custom](http://intellipharm.github.io/dc-addons/examples/leaflet-custom.html)\r\n\r\n\r\n#### Requirements\r\n\r\nThese are the requirements for the dc leaflet charts. Ther version number supplied is the version supported when created. It could work with later versions.\r\n\r\n  *  [leaflet.js](https://github.com/Leaflet/Leaflet) v0.7.2\r\n```html\r\n<!--- through bower -->\r\n<link rel=\"stylesheet\" href=\"bower_components/leaflet/dist/leaflet.css\" />\r\n<script src=\"bower_components/leaflet/dist/leaflet.js\"></script>\r\n\r\n<!--- through cdn -->\r\n<link rel=\"stylesheet\" href=\"http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css\" />\r\n<script src=\"http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.js\"></script>\r\n```\r\n  *  [leaflet.markercluster.js](https://github.com/Leaflet/Leaflet.markercluster) v0.4.0 (in case you use the cluster option)\r\n```html\r\n<!--- through bower -->\r\n<link rel=\"stylesheet\" href=\"bower_components/leaflet.markercluster/dist/MarkerCluster.css\" />\r\n<link rel=\"stylesheet\" href=\"bower_components/leaflet.markercluster/dist/MarkerCluster.Default.css\" />\r\n<script src=\"bower_components/leaflet.markercluster/dist/leaflet.markercluster.js\"></script>\r\n\r\n<!--- through cdn -->\r\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/MarkerCluster.css\" />\r\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/MarkerCluster.Default.css\" />\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/leaflet.markercluster.js\"></script>\r\n```\r\n\r\nIf you want to include individually\r\n```html\r\n<script src=\"bower_components/dc-addons/dist/leaflet-map/dc-leaflet.min.js\"></script>\r\n```\r\n\r\n## Google Maps\r\n\r\nThis extension provides support for dc.js charts in a [google](https://developers.google.com/maps/documentation/javascript/) map. This is an extension of https://github.com/yurukov/dc.leaflet.js modified to work with google maps and dc.js version 2.\r\n\r\n#### Usage\r\nThere are two charts currently implemented - markers and choropleth. They extend the base abstract google chart. Both support selection of datapoints and update in real time. Styling and map options can be set directly to the map object and though functions in the chart. Check the [Google maps reference](https://developers.google.com/maps/documentation/javascript/reference) for more information on the specific map, marker and geojson options.\r\nLocation can be set as either 'lat,lng' string or as an array [lat,lng].\r\n\r\n###### Marker Chart\r\nEach group is presented as one marker on the map.\r\n```\r\ndc.googleMarkerChart(parent,chartGroup)\r\n  .mapOptions({..})       - set google maps specific options to the map object; Default: Google maps default options\r\n  .center([1.1,1.1])      - initial location\r\n  .zoom(7)                - initial zoom level\r\n  .map()                  - get map object\r\n  .locationAccessor()     - function (d) to access the property indicating the latlng (string or array); Default: keyAccessor\r\n  .marker()               - set function (d,map) to build the marker object. Default: standard Google map marker is built\r\n  .icon()                 - function (d,map) to build an icon object. Default: L.Icon.Default\r\n  .popup()                - function (d,marker) to return the string or DOM content of a popup\r\n  .renderPopup(true)      - set if popups should be shown; Default: true\r\n  .cluster(false)         - set if markers should be clustered. Requires markerclusterer; Default: false\r\n  .clusterObject({..})    - options for the markerCluster object\r\n  .rebuildMarkers(false)  - set if all markers should be rebuild each time the map is redrawn. Degrades performance; Default: false\r\n  .brushOn(true)          - if the map would select datapoints; Default: true\r\n  .filterByArea(false)    - if the map should filter data based on the markers inside the zoomed in area instead of the user clicking on individual markers; Default: false\r\n  .markerGroup()          - get the Google maps group object containing all shown markers (regular group or cluster)\r\n```\r\n\r\n###### Choropleth Chart\r\nEach group is mapped to an feature on the map\r\n```\r\ndc.googleChoroplethChart(parent,chartGroup)\r\n  .mapOptions({..})       - set google maps specific options to the map object; Default: Google maps default options\r\n  .center([1.1,1.1])      - get or set initial location\r\n  .zoom(7)                - get or set initial zoom level\r\n  .map()                  - get map object\r\n  .geojson()              - geojson object describing the features\r\n  .featureOptions()       - object or a function (feature) to set the options for each feature\r\n  .featureKeyAccessor()   - function (feature) to return a feature property that would be compared to the group key; Defauft: feature.properties.key\r\n  .popup()                - function (d,feature) to return the string or DOM content of a popup\r\n  .renderPopup(true)      - set if popups should be shown; Default: true\r\n  .brushOn(true)          - if the map would select datapoints; Default: true\r\n```\r\n\r\n###### Custom Chart\r\nGives you full control over what is displayed on the map\r\n```\r\ndc.googleCustomChart(parent,chartGroup)\r\n  .mapOptions({..})       - set google specific options to the map object; Default: Google default options\r\n  .center([1.1,1.1])      - initial location\r\n  .zoom(7)                - initial zoom level\r\n  .map()                  - get map object\r\n  .locationAccessor()     - function (d) to access the property indicating the latlng (string or array); Default: keyAccessor\r\n  .renderItem()           - function (chart, map, d, i) the initial rendering of the map\r\n  .redrawItem()           - function (chart, map, d, i) run on every crossfilter. The d object will have a filtered value added to it.\r\n```\r\n\r\n\r\n#### Examples\r\n  * [Google Marker](http://intellipharm.github.io/dc-addons/examples/google-marker.html)\r\n  * [Google Choropleth](http://intellipharm.github.io/dc-addons/examples/google-choropleth.html)\r\n  * [Google Custom](http://intellipharm.github.io/dc-addons/examples/google-custom.html)\r\n\r\n\r\n#### Requirements\r\n  * [google maps](https://developers.google.com/maps/documentation/javascript/)\r\n```html\r\n<!--- through cdn -->\r\n<script src=\"https://maps.googleapis.com/maps/api/js?key=API_KEY\"></script>\r\n```\r\n  * [google maps marker clusterer](https://code.google.com/p/google-maps-utility-library-v3/)\r\n```html\r\n<!--- through cdn -->\r\n<script src=\"http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/src/markerclusterer.js\"></script>script>\r\n```\r\n\r\nIf you want to include individually\r\n```html\r\n<script src=\"bower_components/dc-addons/dist/google-map/dc-google.min.js\"></script>\r\n```\r\n\r\n## Tooltip Mixin\r\nThis allows you to add html and style the chart title\r\n\r\n#### Usage\r\nAfter you have rendered the chart than run the tooltip mixin on the chart\r\n\r\n```js\r\nvar chart = dc.barChart('#chart');\r\n// set options...\r\nchart.render();\r\n\r\ndc.tooltipMixin(chart);\r\n```\r\n\r\n\r\n#### Examples\r\nComing soon...\r\n\r\n\r\n#### Requirements\r\n  * [d3-tip](https://github.com/Caged/d3-tip)\r\n```html\r\n<!-- through bower -->\r\n<script src=\"bower_components/d3-tip/index.js\"></script>\r\n<!-- through cdn -->\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-tip/0.6.3/d3-tip.min.js\"></script>\r\n```\r\n\r\nIf you want to include individually\r\n```html\r\n<link type=\"stylesheet\" href=\"bower_components/dc-addons/dist/tooltip/dc-tooltip-mixin.min.css\" />\r\n<script src=\"bower_components/dc-addons/dist/tooltip/dc-tooltip-mixin.min.js\"></script>\r\n```\r\n\r\n## Pagination Mixin\r\nThis allows you to paginate a chart\r\n\r\n#### Usage\r\nAfter you have rendered the chart than run the pagination mixin on the chart\r\n\r\n```js\r\nvar chart = dc.barChart('#chart');\r\n// set options...\r\nchart.render();\r\n\r\ndc.paginationMixin(chart);\r\n```\r\n\r\n\r\n#### Examples\r\n  * [Pagination](http://intellipharm.github.io/dc-addons/examples/pagination.html)\r\n\r\n\r\n#### Requirements\r\nNone\r\n\r\nIf you want to include individually\r\n```html\r\n<script src=\"bower_components/dc-addons/dist/pagination/dc-pagination-mixin.min.js\"></script>\r\n```\r\n\r\n## Bubble Cloud\r\n\r\n#### Usage\r\n```js\r\nvar chart = dc.bubbleCloud('#chart');\r\n\r\n// required options\r\nchart\r\n    .width(500)\r\n    .height(500)\r\n    .dimension(dimension)\r\n    .group(group)\r\n    .x(d3.scale.ordinal())\r\n    .r(d3.scale.linear())\r\n    .radiusValueAccessor(function(d) {\r\n        return d.value;\r\n    })\r\n\r\n// optional options\r\nchart\r\n    valueAccessor(function(d) {\r\n        return d.value;\r\n    })\r\n    .colorAccessor(function(d) {\r\n        return d.value;\r\n    })\r\n    .label(function(d) {\r\n        return d.key;\r\n    })\r\n    .renderLabel(true)\r\n    .title(function(d) {\r\n        return d.key + ': ' + d.value;\r\n    })\r\n    .renderTitle(true)\r\n\r\n```\r\n\r\n#### Examples\r\n  * [Bubble Cloud](http://intellipharm.github.io/dc-addons/examples/bubble-cloud.html)\r\n\r\n\r\n#### Requirements\r\nNone\r\n\r\nIf you want to include individually\r\n```html\r\n<script src=\"bower_components/dc-addons/dist/bubble-cloud/dc-bubble-cloud.min.js\"></script>\r\n```\r\n\r\n\r\n## Paired Row\r\nTwo row charts beside each other, usually used for gender/age breakdowns\r\n\r\n#### Usage\r\n```js\r\nvar chart = dc.pairedRowChart('#chart');\r\n\r\n// the dimension is required to return an array\r\nvar ndx = crossfilter(experiments),\r\n    ageGenderDimension = ndx.dimension(function(d) {\r\n        var age_range = 'Unknown';\r\n\r\n        if (d.age <= 9) {\r\n            age_range = '0 - 9';\r\n        } else if (d.age <= 19) {\r\n            age_range = '10 - 19';\r\n        } else if (d.age <= 29) {\r\n            age_range = '20 - 29';\r\n        } else if (d.age <= 39) {\r\n            age_range = '30 - 39';\r\n        } else if (d.age <= 49) {\r\n            age_range = '40 - 49';\r\n        } else if (d.age <= 59) {\r\n            age_range = '50 - 59';\r\n        } else if (d.age <= 69) {\r\n            age_range = '60 - 69';\r\n        } else if (d.age <= 79) {\r\n            age_range = '70 - 79';\r\n        } else if (d.age <= 89) {\r\n            age_range = '80 - 89';\r\n        } else if (d.age <= 99) {\r\n            age_range = '90 - 99';\r\n        } else if (d.age >= 100) {\r\n            age_range = '100+';\r\n        }\r\n\r\n        return [d.gender, age_range];\r\n    }),\r\n    ageGenderGroup = ageGenderDimension.group().reduceCount();\r\n\r\n// required options\r\nchart\r\n    .width(500)\r\n    .height(500)\r\n    .dimension(dimension)\r\n    .group(group)\r\n    // tells the left chart to filter the data based on this function\r\n    .leftKeyFilter(function(d) {\r\n        return d.key[0] === 'Male';\r\n    })\r\n    // tells the right chart to filter the data based on this function\r\n    .rightKeyFilter(function(d) {\r\n        return d.key[0] === 'Female';\r\n    })\r\n\r\n// optional options - this chart extends dc.rowChart, so it has all the same options.\r\n\r\n```\r\n\r\n#### Demo\r\n  * [Paired Row Chart](http://intellipharm.github.io/dc-addons/examples/paired-row-chart.html)\r\n\r\n\r\n#### Requirements\r\nNone\r\n\r\nIf you want to include individually\r\n```html\r\n<script src=\"bower_components/dc-addons/dist/paired-row/dc-paired-row-chart.min.js\"></script>\r\n```\r\n\r\n## Server\r\nCharts generated on the server for large datasets. Only the following charts currently work:\r\n\r\n  * Pie\r\n  * Bar\r\n  * Row\r\n  * Line\r\n\r\n#### Usage\r\n```js\r\nvar chart = dc.serverChart('#chart');\r\n\r\nchart\r\n    .options({\r\n        // required options\r\n        server: 'http://127.0.0.1:3000/',\r\n        name: 'my-chart', // The name of the object in the config file\r\n\r\n        // optional options\r\n        errorMessage: 'A problem occurred creating the charts. Please try again later',\r\n        loadingMessage: 'Loading',\r\n        reconnectingMessage: 'There appears to be a problem connecting to the server. Retyring...',\r\n        connectionErrorMessage: 'Could not connect to the server.',\r\n    })\r\n    .render();\r\n```\r\n\r\nTo get the server running\r\n\r\n```\r\niojs index [full path to server-config.js]\r\n```\r\n\r\nThe server-config.js file should look something like this.\r\n\r\n```js\r\nvar dc = require('dc');\r\n\r\nmodule.exports = {\r\n    'my-chart': {\r\n        connection:  {\r\n            host: 'localhost',\r\n            username: 'root',\r\n            password: 'password',\r\n            database: 'my-database',\r\n            sql: 'SELECT * FROM members'\r\n        },\r\n        charts: [\r\n            {\r\n                type: 'pieChart',\r\n                options: {\r\n                    width: 250,\r\n                    height: 250,\r\n                    margins: {\r\n                        top: 30,\r\n                        right: 50,\r\n                        bottom: 25,\r\n                        left: 40\r\n                    },\r\n                    dimension: function (d) {\r\n                        if (d.gender === 0) {\r\n                            return 'Male';\r\n                        } else if (d.gender === 1) {\r\n                            return 'Female';\r\n                        }\r\n\r\n                        return 'Unknown';\r\n                    },\r\n                    group: function (dimension) {\r\n                        return dimension.group().reduceCount();\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    },\r\n};\r\n```\r\n\r\n#### Demo\r\nYou will need to clone and run the server locally for an example\r\n\r\n\r\n#### Requirements\r\n  * [iojs](https://iojs.org)\r\n```\r\nnpm install iojs -g\r\n```\r\n  * dc-addons\r\n```\r\nnpm install dc-addons --save\r\n```\r\n\r\nIf you want to include individually\r\n```html\r\n<script src=\"bower_components/dc-addons/dist/server/dc-server-chart-with-animations.min.js\"></script>\r\n```\r\n\r\n\r\n## AngularJS Directives\r\nAngular directives for creating charts\r\n\r\n#### Usage\r\nInclude the angular module `AngularDc`\r\n\r\n```js\r\n    angular.module('App', ['AngularDc']);\r\n```\r\n\r\nCreate the chart. Chart options will be an object of all the charts settings.\r\n\r\n```html\r\n<dc-chart chart-type=\"chartType\" chart-group=\"chartGroup\" chart-options=\"chartOptions\"></dc-chart>\r\n```\r\n\r\n#### Demo\r\nComing soon...\r\n\r\n\r\n#### Requirements\r\n  * [AngularJS](https://angularjs.org/)\r\n```\r\nbower install angularjs --save\r\n```\r\n\r\nIf you want to include individually\r\n```html\r\n<script src=\"bower_components/dc-addons/dist/angular/angular-dc.min.js\"></script>\r\n```\r\n\r\n## Crossfilter Server\r\nA shell for crossfilter to allow all calculations to happen on the server.\r\n\r\n#### Usage\r\n\r\nIf the normal crossfilter library is not included, this library will take the crossfilter namespace.\r\n\r\n```js\r\n    chart.dimension(crossfilterServer.dimension);\r\n    chart.group(crossfilterServer.group(function(filters, chartId, callback) {\r\n        // send a request to the server and return the data in the callback\r\n        ajax(function(response) {\r\n            callback(data);\r\n        });\r\n    }));\r\n```\r\n\r\n#### Demo\r\nYou will need to clone and run the server locally for an example\r\n\r\n\r\n#### Requirements\r\nNone\r\n\r\nIf you want to include individually\r\n```html\r\n<script src=\"bower_components/dc-addons/dist/crossfilter-server/crossfilter-server.min.js\"></script>\r\n```\r\n\r\n## Crossfilter Server With Elastic Search\r\nHelper functions to integration dc.js charts with elastic search.\r\n\r\n#### Usage\r\n\r\nIf the normal crossfilter library is not included, this library will take the crossfilter namespace.\r\n\r\n```js\r\n    var query = {\r\n        aggs: {\r\n            date: {\r\n                date_histogram: {\r\n                    field: 'date_field',\r\n                    interval: '1d',\r\n                }\r\n            },\r\n            site: {\r\n                histogram: {\r\n                    field: 'site_id',\r\n                    interval: 1,\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // when filtering a chart, the chart with the integer id will filter the values base on the given field\r\n    var mapping = {\r\n        1: 'date_field',\r\n        2: 'site_id',\r\n    };\r\n\r\n    var url = 'http://localhost:9200/_search';\r\n\r\n    chart.dimension(crossfilterServer.dimension);\r\n    chart.group(crossfilterServer.group(function(filters, chartId, callback) {\r\n        // send a request to the server and return the data in the callback\r\n        crossfilterServer.elasticSearch.send(filters, chartId, url, query, mapping, function(data) {\r\n            callback(data.aggregations.date.buckets);\r\n        });\r\n    }));\r\n```\r\n\r\n#### Demo\r\nYou will need to clone and run the server locally for an example\r\n\r\n\r\n#### Requirements\r\nNone\r\n\r\nIf you want to include individually\r\n```html\r\n<script src=\"bower_components/dc-addons/dist/crossfilter-server/crossfilter-server.min.js\"></script>\r\n<script src=\"bower_components/dc-addons/dist/elastic-search/elastic-search.min.js\"></script>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}